# Generated by Django 5.1.2 on 2025-03-29 03:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import medica_app.models.usuario
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_doc', models.CharField(choices=[('CC', 'Cédula de Ciudadanía'), ('TI', 'Tarjeta de identidad'), ('CE', 'Cédula de Extranjería')], default='CC', max_length=3, verbose_name='Tipo de documento de identidad')),
                ('num_doc', models.CharField(max_length=20, unique=True, verbose_name='Número de documento')),
                ('fecha_nac', models.DateField(verbose_name='Fecha de nacimiento')),
                ('ciudad_res', models.CharField(default='SOACHA', max_length=100, verbose_name='Ciudad Residencia')),
                ('direccion', models.CharField(max_length=100, verbose_name='Dirección Residencia')),
                ('telefono', models.CharField(max_length=50, verbose_name='Teléfono')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to=medica_app.models.usuario.user_directory_path, verbose_name='Imagen')),
                ('rol', models.CharField(choices=[('MED', 'Medico'), ('PAC', 'Paciente'), ('AUXA', 'Auxiliar Administrativo'), ('AUXE', 'Auxiliar Enfermeria'), ('ADM', 'Administrador de Sistema'), ('ND', 'No asignado')], default='ND', max_length=20, verbose_name='Rol en la empresa')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdministradorSistema',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('codigo', models.CharField(max_length=20)),
                ('acciones', models.CharField(choices=[('GU', 'Gestionar usuarios del sistema'), ('GS', 'Gestionar servicios de la entidad')], default='GU', max_length=20)),
                ('profesion', models.CharField(max_length=100)),
                ('fecha_ingreso', models.DateField()),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('medica_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuxiliarAdministrativo',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fecha_ingreso', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('medica_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuxiliarEnfermeria',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('departamento', models.CharField(choices=[('URGENCIAS', 'URGENCIAS'), ('CONSULTA EXTERNA', 'CONSULTA EXTERNA'), ('OBSTETRICIA', 'OBSTETRICIA')], default='CONSULTA EXTERNA', max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('medica_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('numero_carnet', models.CharField(max_length=20, verbose_name='Carnet')),
                ('especialidad', models.CharField(max_length=150, verbose_name='Especialidad')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('medica_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tipo', models.CharField(choices=[('ESTANDAR', 'ESTANDAR'), ('PREMIUM', 'PREMIUM')], default='ESTANDAR', max_length=50, verbose_name='Tipo de paciente')),
                ('genero', models.CharField(choices=[('M', 'MASCULINO'), ('F', 'FEMENINO')], default='FEMENINO', max_length=50, verbose_name='Género de paciente')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('medica_app.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AgendaMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora_inicial', models.TimeField()),
                ('hora_final', models.TimeField()),
                ('turno_disponible', models.BooleanField(default=True)),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turnos', to='medica_app.medico')),
            ],
        ),
        migrations.CreateModel(
            name='CitaMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código de la cita')),
                ('ciudad', models.CharField(max_length=50, verbose_name='Ciudad')),
                ('direccion', models.CharField(max_length=50, verbose_name='Direccion')),
                ('consultorio', models.CharField(default='101', max_length=50, verbose_name='Consultorio')),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('estado', models.CharField(choices=[('AG', 'AGENDADA'), ('AT', 'ATENDIDA'), ('CA', 'CANCELADA'), ('NA', 'NO ATENDIDA')], default='AGENDADA', max_length=20, verbose_name='Estado de la cita')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='citas_medicas', to='medica_app.medico')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='citas_medicas', to='medica_app.paciente')),
            ],
        ),
    ]
